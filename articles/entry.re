
= ログをはじめて取り込んで可視化する方たちへ


世の中にはたくさんのログがあり、いろんなかたちで携わっている方がいるのではないでしょうか。@<br>{}
例えば、Webサービスのログから分析用途として使用したり、障害対応でログの調査を行ったり、様々あるかと思います。@<br>{}
ログになんらかで携わったことがある人は、一度は面倒な作業だと思ったことはないでしょうか（僕はありますw）@<br>{}
ログ収集し、分析するところまでいければまだいいです。@<br>{}
現実は、まずログ自体の取得が非常に大変だと感じている方が多いのではないでしょうか。@<br>{}
サーバが1台ならいいのですが、数十台になってきたら、ツラミでしかないです。  



あくまで一例ですが、どのような流れでログを取得し、分析するところまでやっているか見ていきたいと思います。


== ログ取得から分析までの流れ


仮にWebサーバ（Nginx）を4台運用しているとします。@<br>{}
日々のアクセス状況を見たいため、Nginxのアクセスログ（access.log）を取得したいと思います。  

 1. Webサーバにアクセスし、access.logをscpで取得します
 1. Webサーバが4台あるため、1を4回繰り返します
 1. 取得したaccess.logをマージします
 1. マージしたログをExcelに展開します
 1. Excelに展開したログを分析できるようレコードをカラム単位に分割できるよう加工します
 1. 分析開始



さて、どうでしょうか。@<br>{}
Excelで分析する前提でやりましたが、かなりの工数がかかることがわかるのではないでしょうか？  



いやいや、自動化できるところあるでしょ！って思う人もいると思います。@<br>{}
たしかにシェル芸人の方やVBを駆使できる方がいれば可能です。@<br>{}
ただ、取り込む際にバッチ処理で施すものなら、ログの鮮度は落ちてしまいます。  



では、もっと楽に取り込めて、リアルタイムで分析できるログ基盤を構築することはできないのでしょうか。@<br>{}
結論から言うとできます。@<br>{}
Elastic Stackというプロダクトを活用することで、実現することができます。  



それではここからElastic Stackについて説明していきます。


== Elastic Stackについて


Elastic Stackは、Elasticsearch社が提供するプロダクトです。@<br>{}
以前までは、ELKという言葉で、Elasticsearch、Logstash、Kibanaの頭文字をとった呼び名で親しまれていました。@<br>{}
しかし、Beatsという新たなプロダクトが増えたことにより、ELKでは違和感があるのと、ELKにうまい具合にB（Beatsの頭文字）を追加することも難しいという事態が発生しました。@<br>{}
そこで、ELKをやめて、Elastic Stackという名前に統合し、以下の4つがプロダクトとして構成されています。  

 * Elasticsearch
 * Logstash
 * Kibana
 * Beats



どんな用途で使われているのかを説明していきます。@<br>{}
ザックリとした説明なので、なんとなーく言っている意味がわかるレベルで読み進めてもらえればと思います。


=== Elasticsearch


Elasticsaerchは、オープンソースの分散型RESTfull検索エンジンです。@<br>{}
用途としては、リアルタイムデータ分析、ログ解析、全文検索など様々なところで利用されてます。@<br>{}
本書では、ログを取り込むストアとしてElasticsearchを利用します。  


=== Logstash


Logstashは、オープンソースログ収集管理ツールです。@<br>{}
インプット用のプラグインが豊富にあるため、様々なデータソースに対応できます。@<br>{}
例えば、File、Kinesis、S3、Kafkaなどです。@<br>{}
また、取得したログをフィールドに識別して構造化することも可能です。@<br>{}
構造化したデータをElasticsearchやHadoopなどをアウトプット先として指定することが可能です。@<br>{}
このようにインプットしたデータを構造化し、アウトプットするまでの一連の動作をLogstashは担っています。


=== kibana


Kibanaは、オープンソースのビジュアライズツールで、Elasticsaerchに取り込んだデータをビジュアライズするためのツールです。@<br>{}
直感的にわかりやすいUIからリアルタイムデータ分析やログ解析用のダッシュボードを作成することができます。


=== Beats


Beatsは、様々な用途に合わせてデータを容易に送ることができるオープンソースの軽量データシッパーです。@<br>{}
目的別にエージェントが用意されており、それらを一括りにしたのをBeatsファミリーと言います。@<br>{}
Beatsファミリーは、Filebeat、Metricbeat、Packetbeat、Winlogbeat、Auditbeat、Heartbeatの6つが用意されています。@<br>{}
簡単にですが、どんな用途で使われるものなのかを説明します。


==== Filebeat


大量のサーバのログファイルなどのファイルを一箇所に集約する用途で用います。@<br>{}
また、集約だけでなく、転送時にあらかじめ用意されたモジュールを利用することで、自動でパース処理を行い、ストアすることが可能です。@<br>{}
さらに取り込んだデータをビジュアライズするためのダッシュボードも用意されているため、簡単に導入することができます。


==== Metricbeat


メトリックという名前だけあって、システムやサービスのメトリックを収集することができます。@<br>{}
例えば、サーバのCPUや、メモリの使用率からディスクIOなどのデータだけでなく、プロセスなども収集できます。@<br>{}
また、ビジュアライズするためのダッシュボードもあらかじめ用意されているため、簡単に導入することが可能です。  



サービスについても、簡単に収集するためのモジュールが用意されており、PostgreSQLやDockerなどのメトリクスを取得可能です。


==== Packetbeat


ネットワークを流れるパケットを収集することができます。@<br>{}
パケットを収集するときにWiresharkなどで取得する場面があると思いますが、より簡単に専門的な知識がなくてもビジュアライズまで可能とするものです。@<br>{}
様々なプロトコルに対応しているため、MySQLのクエリなどをビジュアライズすることも可能です。


==== Winlogbeat


Windowsのイベントログを収集することができます。@<br>{}
例えば、Windowsサーバを運用しており、監査目的でログオンしたユーザを把握したい場合は、イベントIDの"ログオン: 4624"や"ログオン失敗: 4625"を指定するだけで、収集することが可能です。@<br>{}
このように取得したいイベントIDを指定するだけなので、簡単に導入できます。  


==== Auditbeat


サーバの監査ログを収集することができます。@<br>{}
通常、auditdのログを監査ログとして利用する場面が多いと思いますが、Auditbeatを使用することで、必要な情報をグルーピングし、ストアすることができます（要は意識せずストアまでやってくれます）。@<br>{}
また、ダッシュボードも用意されているため、取り込んで、ビジュアライズまでを簡単に導入できます。


==== Heartbeat


サーバの稼働状況を監視することができます。@<br>{}
ICMPでサーバの稼働状況を把握することも可能ですし、HTTPでサービス稼働も把握することが可能です。@<br>{}
また、TLS、認証やプロキシにも対応しているため、あらゆる状況でも稼働状況を監視することができます。  


== 目的


ここまでElastic Stackについて説明しましたが、次章からは実際にElastic Stackに触れていきます。@<br>{}
具体的には、ログの取り込み部分のLogstashとBeatsの二つのプロダクトを通じて、ログの取り込み方法の理解を深めたいと思います。@<br>{}
主に以下についての理解を深めていけるようにします。  

 * Logstashの使い方を知る
 * Beatsの使い方を知る
 * LogstashとBeatsの違いを知る

